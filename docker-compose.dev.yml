version: '3.8'

services:
  app:
    build:
      context:
      target: development
    container_name: odin-dev
    ports:
      - "8081:8081"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://odinson:A$$g@rd@localhost:5432/odin
      - PORT=8081
    volumes:
      - ./src:/app/src
      - ./package.json:/app/package.json
      - ./tsconfig.json:/app/tsconfig.json
      - ./drizzle.config.ts:/app/drizzle.config.ts
      - /app/node_modules
    depends_on:
      db:
        condition: service_healthy
    networks:
      - backend-network
    restart: unless-stopped
  
  db:
    image: postgres:16-alpine
    container_name: odin-db
    environment:
      - POSTGRES_USER=odinson
      - POSTGRES_PASSWORD=A$$g@rd@
      - POSTGRES_DB=odin
    ports:
      - "5432:5432"
    volumes:
      - odin_dev_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - backend-network
    restart: unless-stopped
  
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: odin-pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "5050:80"
    depends_on:
      - db
    networks:
      - backend-network
    restart: unless-stopped

networks:
  backend-network:
    driver: bridge

volumes:
  odin_dev_data:
    driver: local