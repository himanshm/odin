version: '3.8'

services:
  app:
    build:
      context: .
      target: production
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - PORT=8081
    
    #TODO: Remove this in production
    depends_on:
      db:
        condition: service_healthy
    networks:
      - backend-network
    restart: always
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # TODO: remove db service in production
  db:
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=odinson
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=odin
    volumes:
      - odin_prod_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend-network
    restart: always

  #TODO: Add SSL certificate and key
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app
    networks:
      - backend-network
    restart: always

networks:
  backend-network:
    driver: bridge

volumes:
  odin_prod_data: